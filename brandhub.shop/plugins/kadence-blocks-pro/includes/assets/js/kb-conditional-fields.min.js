"use strict";const kbConditionalFields=(a,b={})=>{switch(typeof a){case"string":a=document.querySelectorAll(a);break;case"object":!1===Array.isArray(a)&&Object.prototype.hasOwnProperty.call(a,"0")?(a=Object.fromEntries(Object.entries(a).filter(([a,b])=>!isNaN(a)&&"undefined"!=typeof b.elements)),a=Object.values(a)):a=Array.isArray(a)?a:[a];}let c=b.rules||"inline";const d=b.dynamic||!1,e=b.unsetHidden||!1,f=b.disableHidden||!1,g=b.debug||!1,h=b.depth||3,j=[],k=[],l=[],m={initField:(a,b)=>{let c=a.getAttribute("data-conditional-rules");if(0<c.length){c=JSON.parse(c);const d="container"in c?c.container:"",e="action"in c?c.action:"show",f="logic"in c?c.logic:"or";let g="rules"in c?c.rules:[];if("object"==typeof g&&"undefined"==typeof g.length&&(g=[g]),0<g.length){for(let a=0;g.length>a;a++)if("group"in g[a])for(let c=0;g[a].group.length>c;c++)"name"in g[a].group[c]&&!k[b].includes(g[a].group[c].name)&&k[b].push(g[a].group[c].name);else"name"in g[a]&&!k[b].includes(g[a].name)&&k[b].push(g[a].name);a.removeAttribute("data-conditional-rules"),a.mfConditionalContainerSelector=d,a.mfConditionalAction=e,a.mfConditionalLogic=f,a.mfConditionalRules=g,a.mfConditionalFormIndex=b,m.updateField(a)}}},updateField:(a,b=1)=>{const c=a.mfConditionalFormIndex;let d=a.mfConditionalAction;const e=a.mfConditionalLogic,f=a.mfConditionalRules;let g=!1;if(0<f.length)for(let a,b=0;f.length>b;b++){if(a=!1,"group"in f[b]){const d=f[b].relation||"and";let e=!1;for(let g=0;f[b].group.length>g;g++){if(e=m.evaluateRule(f[b].group[g],c),!1==e&&"and"==d){a=!1;break}else if(e&&"or"==d){a=!0;break}a=e}}else a=m.evaluateRule(f[b],c);if(!1===a&&"and"==e){g=!1;break}else if(a&&"or"==e){g=!0;break}g=a}g?m.toggleField(a,d,b):(d="hide"==d?"show":"show"==d?"hide":"disable"==d?"enable":"enable"==d?"disable":"none",m.toggleField(a,d,b))},toggleField:(a,b,c)=>{const d=a.mfConditionalFormIndex,g=a.id,i=a.mfConditionalContainerSelector;let j=null;if(c<h&&k[d].includes(g)){const a=m.getDependantField(g,d);if(0<a.length)for(let d=0;a.length>d;d++)"hide"==b?m.toggleField(a[d],"hide",c++):"show"==b&&m.updateField(a[d],"show",c++)}"hide"==b?(""==i?a.setAttribute("hidden",!0):(j=a.closest(""+i+""),j&&j.setAttribute("hidden",!0)),f&&a.setAttribute("disabled","disabled"),e&&("checkbox"==a.type||"radio"==a.type?a.checked=!1:a.value="")):"disable"==b?a.setAttribute("disabled","disabled"):"enable"==b?a.hasAttribute("disabled")&&a.removeAttribute("disabled"):"show"==b&&(""==i?a.removeAttribute("hidden"):(j=a.closest(""+i+""),j&&j.removeAttribute("hidden")),f&&a.removeAttribute("disabled"))},getDependantField:(a,b)=>{const c=[];if("undefined"!=typeof j[b])for(let d=0;j[b].length>d;d++)if("mfConditionalRules"in j[b][d]){const e=j[b][d].mfConditionalRules.some(b=>{if("group"in b){for(let c=0;b.group.length>c;c++)if(b.group[c].name===a)return!0;return!1}return b.name===a});"undefined"!=typeof e&&!1!==e&&c.push(j[b][d])}return c},evaluateRule:(b,c)=>{const d=b.name,e=b.operator;let f=b.value;if(k[c].includes(d)){let b,g,h,i;if(b=d.includes("[]")?a[c].querySelectorAll("[name=\""+d+"\"]"):a[c].querySelectorAll("[id=\""+d+"\"]"),0==b.length&&(b=a[c].querySelectorAll("[name=\""+d+"\"]")),0<b.length){if(g=b[0].type,"radio"!==g&&"checkbox"!==g&&(b=b[0]),"radio"==g||"checkbox"==g){h=[];for(let a=0;a<b.length;a++)b[a].checked&&h.push(b[a].value),a==b.length-1&&(h=h.join("|"))}else if(!(("date"==g||"time"==g)&&b.value))h=b.value;else if("date"==g){const a=Date.parse(b.value+"Z"),c=Date.parse(f+"Z");h=a-a%864e5,f=c-c%864e5}else if("time"==g){let a=Date.parse(b.value);a||(a=Date.parse("1970-01-01 "+b.value+"Z"));const c=Date.parse(f+"Z");h=a%864e5,f=c%864e5}i=m.compareValues(e,h,f)}return i}return!1},compareValues:(a,b,c)=>(b=b?b.toString().toLowerCase():"",c=c?c.toString().toLowerCase():"","is"===a?c===b:"isnot"===a?c!==b:"greaterthan"===a?!(isNaN(b)||isNaN(c))&&+b>+c:"lessthan"===a?!(isNaN(b)||isNaN(c))&&+b<+c:"equalgreaterthan"===a?!(isNaN(b)||isNaN(c))&&+b>=+c:"equallessthan"===a?!(isNaN(b)||isNaN(c))&&+b<=+c:"contains"===a?b.includes(c):"doesnotcontain"===a?!b.includes(c):"beginswith"===a?b.startsWith(c):"doesnotbeginwith"===a?!b.startsWith(c):"endswith"===a?b.endsWith(c):"doesnotendwith"===a?!b.endsWith(c):"isempty"===a?""===b:"isnotempty"==a&&""!==b),updateForm:async(b,d="add")=>{if("undefined"==typeof a[b])return!1;if("add"==d)try{const d=await new Promise((d,e)=>{let g=[];if("inline"==c)g=a[b].querySelectorAll("[data-conditional-rules]");else{for(let d=0;c.length>d;d++)if("field"in c[d]){let e=a[b].elements[c[d].field];e=e instanceof RadioNodeList?Array.from(e):[e];for(let a=0;e.length>a;a++)if("undefined"!=typeof e[a]){const b=e[a];b.setAttribute("data-conditional-rules",JSON.stringify(c[d])),g.push(b)}delete c[d].field}c=null}0<g.length?(j[b]=j[b].concat(Array.prototype.slice.call(g)),d(g)):e("No conditional fields found on step 1")}),e=await new Promise((a,c)=>{if(0<d.length)for(let c=0;d.length>c;c++)m.initField(d[c],b),c==d.length-1&&a();else c("No conditional fields to initialize on step 2")});if(0<k.length)for(let c=0;k[b].length>c;c++)if(!l[b].includes(k[b][c])){let d=a[b].querySelectorAll("[id=\""+k[b][c]+"\"]");if(0===d.length)if(d=a[b].querySelectorAll("[type=\"checkbox\"][id^=\""+k[b][c]+"\"]"),0<d.length){const a=d[0]?.name,e=k[b][c];k[b][c]=a;const f=m.getDependantField(e,b);if(0<f.length)for(let b=0;f.length>b;b++)if(0<f[b].mfConditionalRules.length){let c=!1;for(let d=0;f[b].mfConditionalRules.length>d;d++)if("group"in f[b].mfConditionalRules[d])for(let g=0;f[b].mfConditionalRules[d].group.length>g;g++)f[b].mfConditionalRules[d].group[g].name==e&&(f[b].mfConditionalRules[d].group[g].name=a,c=!0);else f[b].mfConditionalRules[d].name==e&&(f[b].mfConditionalRules[d].name=a,c=!0);c&&m.updateField(f[b])}}else if(d=a[b].querySelectorAll("[type=\"radio\"][id^=\""+k[b][c]+"\"]"),0<d.length){const a=d[0]?.name,e=k[b][c];k[b][c]=a;const f=m.getDependantField(e,b);if(0<f.length)for(let b=0;f.length>b;b++)if(0<f[b].mfConditionalRules.length){let c=!1;for(let d=0;f[b].mfConditionalRules.length>d;d++)if("group"in f[b].mfConditionalRules[d])for(let g=0;f[b].mfConditionalRules[d].group.length>g;g++)f[b].mfConditionalRules[d].group[g].name==e&&(f[b].mfConditionalRules[d].group[g].name=a,c=!0);else f[b].mfConditionalRules[d].name==e&&(f[b].mfConditionalRules[d].name=a,c=!0);c&&m.updateField(f[b])}}else d=a[b].querySelectorAll("."+k[b][c]);if(0<d.length){for(let a=0;d.length>a;a++)d[a].mfConditionalFormIndex=b,d[a].addEventListener("input",m.fieldListener,!1);l[b].push(k[b][c])}d=null}return!0}catch(c){if(g){let d="formIndex: "+b;"undefined"!=typeof a[b].getAttribute("id")&&(d="formId: "+a[b].getAttribute("id")),console.info(`${d} => ${c}`)}return!1}else if("remove"==d)return j[b]=j[b].filter(c=>"undefined"!=typeof a[b].elements[""+c.name+""]),k[b]=k[b].filter(c=>"undefined"!=typeof a[b].elements[""+c+""]),l[b]=l[b].filter(c=>"undefined"!=typeof a[b].elements[""+c+""]),!0;return!1},fieldListener:a=>{let b;if(b="radio"==a.target.type||"checkbox"==a.target.type?m.getDependantField(a.target.name,a.target.mfConditionalFormIndex):m.getDependantField(a.target.id,a.target.mfConditionalFormIndex),0<b.length)for(let a=0;b.length>a;a++)m.updateField(b[a])},formListener:a=>{const b=a.target.mfConditionalFormIndex,c=a.detail.action;m.updateForm(b,c)}};if("block"==c){const a=document.getElementById("rules-mf-conditional-fields");if(void 0!==typeof a)c=JSON.parse(a.innerHTML);else return g&&console.warn(`The rules element could not be found.`),!1}if("inline"!==c&&"object"!=typeof c)return g&&console.warn(`The supplied rules or rule type is not valid.`),!1;if(0<a.length){for(let b=0;a.length>b;b++)j.push([]),k.push([]),l.push([]),a[b].mfConditionalFormIndex=b,m.updateForm(b);if(d)for(let b=0;a.length>b;b++)a[b].addEventListener("kbConditionalFormUpdated",m.formListener,!1)}else return g&&console.warn(`The supplied conditional form was not found`),!1};if("undefined"!=typeof window){const a=document.querySelectorAll("[data-conditional-rules]"),b=[];for(let c=0;c<a.length;c++){const d=a[c],e=d.closest("form");e&&b.push(e)}if(window?.conditionalExtras?.columns&&0<window.conditionalExtras.columns.length)for(let a=0;a<window.conditionalExtras.columns.length;a++)if(window.conditionalExtras.columns?.[a]?.class){const c=document.querySelector(window.conditionalExtras.columns[a].class),d=c.closest("form");c.setAttribute("data-conditional-rules",JSON.stringify(window.conditionalExtras.columns[a].condition)),b.push(d)}const c=[...new Set(b)];kbConditionalFields(c,{disableHidden:!0})}