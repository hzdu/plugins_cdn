!function(e){var n;"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?(n=require("jquery"),module.exports=e(n)):e(window.jQuery||window.Zepto||window.$)}(function(o){"use strict";var s=/\r?\n/g,t=/^(?:submit|button|image|reset|file)$/i,r=/^(?:input|select|textarea|keygen)/i,l=/^(?:checkbox|radio)$/i;o.fn.serializeJSON=function(e){var a=o.serializeJSON,u=a.setupOpts(e),s=o.extend({},u.defaultTypes,u.customTypes),e=a.serializeArray(this,u),l={};return o.each(e,function(e,n){var t,r=n.name,i=o(n.el).attr("data-value-type");i||u.disableColonTypes||(r=(t=a.splitType(n.name))[0],i=t[1]),"skip"!==i&&(i=i||u.defaultType,!(t=a.applyTypeFunc(n.name,n.value,i,n.el,s))&&a.shouldSkipFalsy(n.name,r,i,n.el,u)||(r=a.splitInputNameIntoKeysArray(r),a.deepSet(l,r,t,u)))}),l},o.serializeJSON={defaultOptions:{},defaultBaseOptions:{checkboxUncheckedValue:void 0,useIntKeysAsArrayIndex:!1,skipFalsyValuesForTypes:[],skipFalsyValuesForFields:[],disableColonTypes:!1,customTypes:{},defaultTypes:{string:function(e){return String(e)},number:function(e){return Number(e)},boolean:function(e){return-1===["false","null","undefined","","0"].indexOf(e)},null:function(e){return-1===["false","null","undefined","","0"].indexOf(e)?e:null},array:function(e){return JSON.parse(e)},object:function(e){return JSON.parse(e)},skip:null},defaultType:"string"},setupOpts:function(e){var n,t=o.serializeJSON,r=["checkboxUncheckedValue","useIntKeysAsArrayIndex","skipFalsyValuesForTypes","skipFalsyValuesForFields","disableColonTypes","customTypes","defaultTypes","defaultType"];for(n in e=null==e?{}:e)if(-1===r.indexOf(n))throw new Error("serializeJSON ERROR: invalid option '"+n+"'. Please use one of "+r.join(", "));return o.extend({},t.defaultBaseOptions,t.defaultOptions,e)},serializeArray:function(e,a){null==a&&(a={});var u=o.serializeJSON;return e.map(function(){var e=o.prop(this,"elements");return e?o.makeArray(e):this}).filter(function(){var e=o(this),n=this.type;return this.name&&!e.is(":disabled")&&r.test(this.nodeName)&&!t.test(n)&&(this.checked||!l.test(n)||null!=u.getCheckboxUncheckedValue(e,a))}).map(function(e,n){var t=o(this),r=t.val(),i=this.type;return null==r?null:(l.test(i)&&!this.checked&&(r=u.getCheckboxUncheckedValue(t,a)),d(r)?o.map(r,function(e){return{name:n.name,value:e.replace(s,"\r\n"),el:n}}):{name:n.name,value:r.replace(s,"\r\n"),el:n})}).get()},getCheckboxUncheckedValue:function(e,n){e=e.attr("data-unchecked-value");return e=null==e?n.checkboxUncheckedValue:e},applyTypeFunc:function(e,n,t,r,i){var a=i[t];if(!a)throw new Error("serializeJSON ERROR: Invalid type "+t+" found in input name '"+e+"', please use one of "+u(i).join(", "));return a(n,r)},splitType:function(e){var n=e.split(":");if(1<n.length){var t=n.pop();return[n.join(":"),t]}return[e,""]},shouldSkipFalsy:function(e,n,t,r,i){r=o(r).attr("data-skip-falsy");if(null!=r)return"false"!==r;r=i.skipFalsyValuesForFields;if(r&&(-1!==r.indexOf(n)||-1!==r.indexOf(e)))return!0;i=i.skipFalsyValuesForTypes;return!(!i||-1===i.indexOf(t))},splitInputNameIntoKeysArray:function(e){e=e.split("[");return""===(e=o.map(e,function(e){return e.replace(/\]/g,"")}))[0]&&e.shift(),e},deepSet:function(e,n,t,r){null==r&&(r={});var i=o.serializeJSON;if(c(e))throw new Error("ArgumentError: param 'o' expected to be an object or array, found undefined");if(!n||0===n.length)throw new Error("ArgumentError: param 'keys' expected to be an array with least one element");var a,u,s,l=n[0];1!==n.length?(a=n[1],u=n.slice(1),""===l&&(n=e[s=e.length-1],l=p(n)&&c(i.deepGet(n,u))?s:1+s),""===a||r.useIntKeysAsArrayIndex&&f(a)?!c(e[l])&&d(e[l])||(e[l]=[]):!c(e[l])&&p(e[l])||(e[l]={}),i.deepSet(e[l],u,t,r)):""===l?e.push(t):e[l]=t},deepGet:function(e,n){var t=o.serializeJSON;if(c(e)||c(n)||0===n.length||!p(e)&&!d(e))return e;var r=n[0];if(""!==r){if(1===n.length)return e[r];n=n.slice(1);return t.deepGet(e[r],n)}}};var u=function(e){if(Object.keys)return Object.keys(e);var n,t=[];for(n in e)t.push(n);return t},p=function(e){return e===Object(e)},c=function(e){return void 0===e},f=function(e){return/^[0-9]+$/.test(String(e))},d=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}});