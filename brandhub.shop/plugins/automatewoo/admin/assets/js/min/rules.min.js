var __webpack_exports__={};!function(e,t){AW.Rules=Backbone.Model.extend({initialize(){const e=this,t=[];this.get("rawRuleOptions")&&_.each(this.get("rawRuleOptions"),(function(s){const l=new AW.RuleGroup(e),i=[];_.each(s,(function(e){const t=new AW.Rule(l);t.set("name",e.name),t.resetOptions(),t.set("compare",e.compare),t.set("value",e.value),e.selected&&t.set("selected",e.selected),i.push(t)})),l.set("rules",i),t.push(l)})),this.set("ruleOptions",t),this.resetAvailableRules()},defaults(){return{allRules:{},availableRules:{},ruleOptions:[]}},resetAvailableRules(){const e=AW.workflow.get("trigger");this.set("availableRules",_.filter(this.get("allRules"),(function(t){return e&&-1!==e.supplied_data_items.indexOf(t.data_item)})));const t={};_.each(this.get("availableRules"),(function(e){t[e.group]||(t[e.group]=[]),t[e.group].push(e)})),this.set("groupedRules",t)},isRuleAvailable(e){const t=AW.rules.get("availableRules"),s=_.pluck(t,"name");return-1!==_.indexOf(s,e)},clearIncompatibleRules(){const e=[];_.each(AW.rules.get("ruleOptions"),(function(t){_.each(t.get("rules"),(function(t){t&&!AW.rules.isRuleAvailable(t.get("name"))&&e.push(t)}))})),_.each(e,(function(e){e.clear()}))},createGroup(){const e=this.get("ruleOptions"),t=new AW.RuleGroup(this);return t.createRule(),e.push(t),this.set("ruleOptions",e),this.trigger("ruleGroupChange"),t},removeGroup(e){const t=this.get("ruleOptions"),s=t.map((function(e){return e.id})).indexOf(e);t[s].destroy(),t.splice(s,1),this.set("ruleOptions",t),this.trigger("ruleGroupChange")}}),AW.Rule=Backbone.Model.extend({initialize(e){this.set("id",_.uniqueId("rule_")),this.set("group",e),this.resetOptions()},getRuleObject(){return t.allRules[this.get("name")]},resetOptions(){const e=this.get("name"),t=this.getRuleObject();return e?this.set("object",t):this.set("object",{}),this.set("compare",!1),this.set("value",!1),this.loadSelectOptions(),this},loadSelectOptions(){const t=this,s=this.getRuleObject();return!s||"select"!==s.type||s.select_choices||(t.set("isValueLoading",!0),e.getJSON(ajaxurl,{action:"aw_get_rule_select_choices",rule_name:s.name},(function(e){e.success&&(s.select_choices=e.data.select_choices,t.set("isValueLoading",!1),t.set("object",s),t.trigger("optionsLoaded"))}))),this},clear(){this.get("group").removeRule(this.id)},destroy(){this.trigger("destroy")}}),AW.RuleGroup=Backbone.Model.extend({initialize(e){this.set("id",_.uniqueId("rule_group_")),this.set("app",e),this.set("rules",[])},createRule(){const e=this.get("rules"),t=new AW.Rule(this);return e.push(t),this.set("rules",e),t},removeRule(e){const t=this.get("rules"),s=t.map((function(e){return e.id})).indexOf(e);t.length>1?(t[s].destroy(),t.splice(s,1),this.set("rules",t)):(t[s].destroy(),this.clear())},clear(){this.get("app").removeGroup(this.id)},destroy(){this.trigger("destroy")}}),AW.RuleView=Backbone.View.extend({className:"automatewoo-rule-container",template:wp.template("aw-rule"),events:{"change .js-rule-select":"updatedName","change .js-rule-compare-field":"updatedCompare","change .js-rule-value-field":"updatedValue","click .js-remove-rule":"clear","change .js-rule-value-from":"updateMinFromValueDate"},initialize(){this.listenTo(this.model,"change:id",this.render),this.listenTo(this.model,"change:group",this.render),this.listenTo(this.model,"optionsLoaded",this.render),this.listenTo(this.model,"destroy",this.remove)},render(){const t=this;return t.$el.html(t.template({rule:t.model.toJSON(),groupedRules:AW.rules.get("groupedRules"),fieldNameBase:t.getFieldNameBase()})),t.setName(),t.setCompare(),t.setValue(),t.maybeToggleValueDisplay(),t.initDatepicker(),e(document.body).trigger("wc-enhanced-select-init"),this},setName(){this.$el.find(".js-rule-select").val(this.model.get("name"))},setCompare(){const e=this.$el.find(".js-rule-compare-field"),t=this.model.get("compare");if(e.filter("select").length&&!t){const t=e.find("option:first-child"),s=e.find("option:first-child").prop("value");t.prop("selected",!0),e.val(s),this.model.set("compare",s)}t&&(e.val(t),e.find('option[value~="'+t+'"]').prop("selected",!0))},setValue(){const t=this.model.get("selected"),s=this.model.get("value");let l;if(t&&(l=this.$el.find(".js-rule-value-field"),l.is("select")?_.isArray(s)?_.each(s,(function(s,i){l.append(e("<option>",{value:s,text:t[i]}))})):l.append(e("<option>",{value:s,text:t})):l.attr("data-selected",t)),s){const t=this.$el.find(".js-rule-value-field"),l=this;this.hasMultipleValueFields()?(_.isArray(s)&&t.each((function(t,l){e(l).val(s[t])})),_.isObject(s)&&Object.keys(s).forEach((function(t){e(".js-rule-value-"+t,l.$el).val(s[t])}))):t.val(s)}},updatedName(e){this.model.set("name",e.target.value).resetOptions(),this.render()},updatedCompare(e){this.model.set("compare",e.target.value),this.render()},updatedValue(t){let s;this.hasMultipleValueFields()?(s=[],this.$el.find(".js-rule-value-field").each((function(){s.push(e(this).val())}))):s=t.target.value,this.model.set("value",s)},getFieldNameBase(){const e=this.model.get("id");return"aw_workflow_data[rule_options]["+this.model.get("group").id+"]["+e+"]"},clear(){this.model.clear()},hasMultipleValueFields(){const e=this.model.get("object");return e&&e.has_multiple_value_fields},maybeToggleValueDisplay(){const e=this.model.get("compare"),t=this.$el.find("[data-aw-compare]");t.length&&(t.addClass("aw-hidden").prop("required",!1).find("select, input").prop("required",!1),t.filter('[data-aw-compare~="'+e+'"]').removeClass("aw-hidden").prop("required",!0).find("select, input").prop("required",!0))},initDatepicker(){this.$el.find(".js-date-picker").datepicker({dateFormat:"yy-mm-dd",showButtonPanel:!0})},updateMinFromValueDate(){const e=this.$el.find(".js-rule-value-from"),t=this.$el.find(".js-rule-value-to");e.length&&t.length&&t.datepicker("option","minDate",e.val())}}),AW.RuleGroupView=Backbone.View.extend({className:"aw-rule-group",template:wp.template("aw-rule-group"),events:{"click .js-add-rule":"addRule"},initialize(){this.listenTo(this.model,"refreshRules",this.refreshRules),this.listenTo(this.model,"change:id",this.refreshRules),this.listenTo(this.model,"destroy",this.remove)},render(){const t=this;return t.model.get("rules").length&&(t.$el.html(t.template(t.model.toJSON())),t.$el.find(".rules").empty(),_.each(t.model.get("rules"),(function(e){const s=new AW.RuleView({model:e});t.$el.find(".rules").append(s.render().el)}))),e(document.body).trigger("wc-enhanced-select-init"),this},addRule(){const t=this.model.createRule(),s=new AW.RuleView({model:t});return this.$el.find(".rules").append(s.render().el),e(document.body).trigger("wc-enhanced-select-init"),this},refreshRules(){_.each(this.model.get("rules"),(function(e){e.trigger("change:group")}))},clear(){this.undelegateEvents(),this.model.clear()}}),AW.RulesView=Backbone.View.extend({el:e("#aw-rules-container"),$meta_box:e("#aw_rules_box"),template:wp.template("aw-rules-container"),events:{"click .js-add-rule-group":"addGroup"},initialize(){this.listenTo(this.model,"ruleGroupChange",this.maybeShowEmptyMessage),this.listenTo(this.model,"change:groupedRules",this.refreshRules),this.render()},render(){const t=this,s=AW.workflow.get("trigger");t.$el.html(t.template({app:t,trigger:s}));const l=t.$el.find(".aw-rule-groups"),i=t.model.get("ruleOptions");return i.length?_.each(i,(function(e){const t=new AW.RuleGroupView({model:e});l.append(t.render().el)})):this.addEmptyMessage(),e(document.body).trigger("wc-enhanced-select-init"),this},addGroup(){const t=this.model.createGroup(),s=new AW.RuleGroupView({model:t});return this.$el.find(".aw-rule-groups").append(s.render().el),e(document.body).trigger("wc-enhanced-select-init"),this},maybeShowEmptyMessage(){this.model.get("ruleOptions").length?this.removeEmptyMessage():this.addEmptyMessage()},addEmptyMessage(){this.$el.find(".aw-rule-groups").html(wp.template("aw-rule-groups-empty"))},removeEmptyMessage(){this.$el.find(".aw-rules-empty-message").remove()},refreshRules(){_.each(this.model.get("ruleOptions"),(function(e){e.trigger("refreshRules")}))}}),e((function(){AW.rules=new AW.Rules({allRules:t.allRules,rawRuleOptions:t.ruleOptions}),AW.rulesView=new AW.RulesView({model:AW.rules})}))}(jQuery,automatewooWorkflowLocalizeScript);
//# sourceMappingURL=rules.min.js.map