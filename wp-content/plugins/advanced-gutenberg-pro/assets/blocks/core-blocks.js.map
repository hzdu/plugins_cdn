{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/blocks/core-blocks/0-class.jsx","webpack:///./src/assets/blocks/core-blocks/font.jsx","webpack:///./src/assets/blocks/0-adv-components/fonts.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wpHooks","wpBlocks","wpCompose","addFilter","hasBlockSupport","createHigherOrderComponent","SUPPORTED_BLOCKS","wp","hooks","blocks","compose","settings","includes","attributes","advgbClass","type","default","props","blockType","fontFamily","className","trim","BlockListBlock","wpI18n","wpBlockEditor","wpComponents","wpElement","blockEditor","editor","__","InspectorControls","PanelBody","ToggleControl","SelectControl","Fragment","fontVariation","styleForce","BlockEdit","isSelected","title","initialOpen","AdvFontControl","familyValue","familyOnChange","setAttributes","advgb_blockCustomClass","variationValue","variationOnChange","label","help","checked","onChange","AdvSetGoogleFontStyle","cssSelector","clientId","AdvLoadGoogleStylesheet","i18n","components","element","advgb_googleFontVariationsList","length","advgbFonts","google_fonts","obj","find","f","VARIATIONS","v","map","advgb_formatFontVariation","concat","indexOf","split","advgb_buildGoogleFontId","replace","toLowerCase","advgb_createLinkTag","document","getElementById","link_tag","createElement","media","rel","id","href","GOOGLE_FONT_VARIATION","advgb_buildGoogleFontUrl","head","appendChild","transformValue","transformOnChange","GOOGLE_FONTS","google_fonts_names","ALL_FONTS","options","textTransform","STYLE"],"mappings":"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","file":"core-blocks.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function ( wpHooks, wpBlocks, wpCompose ) {\n    const { addFilter } = wpHooks;\n    const { hasBlockSupport } = wpBlocks;\n    const { createHigherOrderComponent } = wpCompose;\n\n    const SUPPORTED_BLOCKS = [\n        'core/paragraph',\n        'core/heading'\n    ];\n\n\n    // Register class attribute\n    addFilter( 'blocks.registerBlockType', 'advgb/registerCoreBlocksCustomClass', function ( settings ) {\n        if (SUPPORTED_BLOCKS.includes( settings.name ) && typeof settings.attributes.advgbClass === 'undefined') {\n            settings.attributes = Object.assign( settings.attributes, {\n                advgbClass: {\n                    type: 'string',\n                    default: '',\n                },\n            } );\n        }\n\n        return settings;\n    } );\n\n    // Apply custom class in front-end\n    addFilter( 'blocks.getSaveContent.extraProps', 'advgb/loadFrontendCoreBlocks', function ( props, blockType, attributes ) {\n        if (hasBlockSupport( blockType, 'fontFamily', true ) && attributes.fontFamily) {\n            if (typeof props.className === 'undefined') {\n                props.className = attributes.advgbClass;\n            } else {\n                props.className += ' ' + attributes.advgbClass;\n                props.className = props.className.trim();\n            }\n        }\n        return props;\n    } );\n\n    // Apply class on save\n    const coreBlockClass = createHigherOrderComponent( ( BlockListBlock ) => {\n        return ( props ) => {\n            if (\n                ( !SUPPORTED_BLOCKS.includes( props.name ) || !hasBlockSupport( props.name, 'fontFamily', true ) )\n                && typeof props.attributes.advgbClass === 'undefined'\n            ) {\n                return <BlockListBlock { ...props } />\n            }\n            return <BlockListBlock { ...props } className={ props.attributes.advgbClass } />\n        };\n    }, 'coreBlockClass' );\n    addFilter( 'editor.BlockListBlock', 'advgb/setCoreBlockClass', coreBlockClass );\n\n})( wp.hooks, wp.blocks, wp.compose );\n","import { AdvFontControl, AdvLoadGoogleStylesheet, AdvSetGoogleFontStyle } from \"../0-adv-components/fonts.jsx\";\n\n(function ( wpI18n, wpHooks, wpBlockEditor, wpComponents, wpElement ) {\n    wpBlockEditor = wp.blockEditor || wp.editor;\n    const { addFilter } = wpHooks;\n    const { __ } = wpI18n;\n    const { InspectorControls } = wpBlockEditor;\n    const { PanelBody, SelectControl, ToggleControl } = wpComponents;\n    const { Fragment } = wpElement;\n\n    const SUPPORTED_BLOCKS = [\n        'core/paragraph',\n        'core/heading'\n    ];\n\n    // Register font attributes\n    addFilter( 'blocks.registerBlockType', 'advgb/registerCoreBlocksFontClass', function ( settings ) {\n        if (SUPPORTED_BLOCKS.includes( settings.name )) {\n            settings.attributes = Object.assign( settings.attributes, {\n                fontFamily: {\n                    type: 'string',\n                },\n                fontVariation: {\n                    type: 'string',\n                },\n                styleForce: {\n                    type: 'boolean',\n                    default: false,\n                }\n            } );\n        }\n\n        return settings;\n    } );\n\n    // Add sidebar settings\n    addFilter( 'editor.BlockEdit', 'advgb/coreBlocks', function ( BlockEdit ) {\n        return ( props ) => {\n            return (\n                <Fragment>\n                    <BlockEdit key=\"block-edit-fonts\" {...props} />\n                    { props.isSelected && SUPPORTED_BLOCKS.includes( props.name ) &&\n                        <InspectorControls>\n                            <PanelBody title={ __( 'Font Settings', 'advanced-gutenberg' ) } initialOpen={ true } className=\"advgb-pro-icon\">\n                                <AdvFontControl\n                                    familyValue={ props.attributes.fontFamily }\n                                    familyOnChange={ ( value ) => props.setAttributes( { fontFamily: value, fontVariation: '', advgbClass: advgb_blockCustomClass() } ) }\n                                    variationValue={ props.attributes.fontVariation }\n                                    variationOnChange={ ( value ) => props.setAttributes( { fontVariation: value, advgbClass: advgb_blockCustomClass() } ) }\n                                />\n                                { props.attributes.fontFamily &&\n                                    <ToggleControl\n                                        label={ __( 'Force styling', 'advanced-gutenberg' ) }\n                                        help={ __( 'This adds !important to CSS in frontend to avoid your font being overridden', 'advanced-gutenberg' ) }\n                                        checked={ props.attributes.styleForce }\n                                        onChange={ () => props.setAttributes( { styleForce: !props.attributes.styleForce } ) }\n                                    />\n                                }\n                            </PanelBody>\n                        </InspectorControls>\n                    }\n                    { SUPPORTED_BLOCKS.includes(props.name) && props.attributes.advgbClass && (\n                        <div>\n                            <style>\n                            { /* CSS */ <AdvSetGoogleFontStyle\n                                fontFamily={ props.attributes.fontFamily }\n                                fontVariation={ props.attributes.fontVariation }\n                                cssSelector= { `#block-${props.clientId}` }\n                            /> }\n                            </style>\n                            { /* Google font stylesheet */ }\n                            <AdvLoadGoogleStylesheet\n                                fontFamily={ props.attributes.fontFamily }\n                                fontVariation={ props.attributes.fontVariation }\n                            />\n                        </div>\n                    ) }\n                </Fragment>\n            )\n        }\n    } );\n})( wp.i18n, wp.hooks, wp.blockEditor, wp.components, wp.element );\n","export function AdvFontControl(props) {\n    const { PanelBody, SelectControl } = wp.components;\n    const { Fragment } = wp.element;\n    const { __ } = wp.i18n;\n\n    const {\n        familyValue,\n        familyOnChange,\n        variationValue,\n        variationOnChange,\n        transformValue,\n        transformOnChange\n    } = props;\n\n    const TEXT_TRANSFORM = [\n        { label: 'Default', value: '' },\n        { label: 'Capitalize', value: 'capitalize' },\n        { label: 'Uppercase', value: 'uppercase' },\n        { label: 'Lowercase', value: 'lowercase' },\n    ];\n\n    const DEFAULT_FONT = [\n        { label: 'Default', value: '' },\n    ];\n\n    const GOOGLE_FONTS = typeof advgbFonts !== 'undefined' && advgbFonts.google_fonts_names ? advgbFonts.google_fonts_names.map( ( name ) => {\n\t\treturn { label: name, value: name };\n\t} ) : {};\n\n    const ALL_FONTS = DEFAULT_FONT.concat(GOOGLE_FONTS);\n\n    return (\n        <Fragment>\n            <SelectControl\n                label={ __( 'Font Family', 'advanced-gutenberg' ) }\n                value={ familyValue }\n                options={ ALL_FONTS }\n                onChange={ familyOnChange }\n            />\n            <SelectControl\n                label={ __( 'Font Weight + Style', 'advanced-gutenberg' ) }\n                value={ variationValue }\n                options={ advgb_googleFontVariationsList(familyValue) }\n                onChange={ variationOnChange }\n            />\n            { (typeof transformValue !== 'undefined') &&\n                <SelectControl\n                    label={ __( 'Text Transform', 'advanced-gutenberg' ) }\n                    value={ transformValue }\n                    options={ TEXT_TRANSFORM }\n                    onChange={ transformOnChange }\n                />\n            }\n        </Fragment>\n\n    )\n}\n\nfunction advgb_googleFontVariationsList(fontFamily) {\n    if(\n        typeof fontFamily !== 'undefined'\n        && fontFamily.length > 0\n        && typeof advgbFonts !== 'undefined'\n        && advgbFonts.google_fonts\n    ){\n        const DEFAULT_OPTION = [\n            { label: 'Default', value: '' },\n        ];\n\n        let obj = advgbFonts.google_fonts.find( value => value.f === fontFamily);\n        const VARIATIONS = obj !== 'undefined' && obj.v.length > 0 ? obj.v.map( ( name ) => {\n            return { label: advgb_formatFontVariation(name), value: name };\n        } ) : {};\n\n        return DEFAULT_OPTION.concat(VARIATIONS);\n    }\n}\n\n// Return fontVariation formatted. e.g. 600italic -> 600 (italic)\nfunction advgb_formatFontVariation(fontVariation) {\n    if(fontVariation.length > 6 && fontVariation.indexOf('italic') !== -1) {\n        return `${fontVariation.split('italic', 1)[0]} + italic`;\n    } else {\n        return `${fontVariation}`;\n    }\n}\n\nfunction advgb_buildGoogleFontId(fontFamily, fontVariation) {\n    return 'advgb_google_font_' + fontFamily.replace(/\\s/g, '_').toLowerCase() + (fontVariation.length > 0 ? '_' + fontVariation : '');\n}\n\nfunction advgb_buildGoogleFontUrl(fontFamily, fontVariation) {\n    const GOOGLE_FONT_BASE = 'https://fonts.googleapis.com/css2?family=';\n\n    if(fontVariation.length > 0) {\n        let GOOGLE_FONT_VARIATION;\n        // Extract font-weight and font-style from variation. e.g. 400italic -> 400\n        if(fontVariation.indexOf('italic') !== -1) {\n            let v = fontVariation.split('italic', 1);\n            if(v[0] !== 'undefined' && v[0].length > 0) {\n                GOOGLE_FONT_VARIATION = ':ital,wght@1,' + v[0];\n            } else {\n                GOOGLE_FONT_VARIATION = ':ital@1';\n            }\n        } else {\n            GOOGLE_FONT_VARIATION = ':wght@' + fontVariation;\n        }\n        return GOOGLE_FONT_BASE + fontFamily.replace(/\\s/g, '+') + GOOGLE_FONT_VARIATION;\n    }\n    return GOOGLE_FONT_BASE + fontFamily.replace(/\\s/g, '+')\n}\n\nfunction advgb_createLinkTag(fontFamily, fontVariation){\n    if(\n        typeof fontFamily !== 'undefined'\n        && fontFamily.length > 0\n        && !document.getElementById(advgb_buildGoogleFontId(fontFamily, fontVariation))\n    ){\n        var link_tag = document.createElement('link');\n        link_tag.media = 'all';\n        link_tag.rel = 'stylesheet';\n        link_tag.id = advgb_buildGoogleFontId(fontFamily, fontVariation);\n        link_tag.href = advgb_buildGoogleFontUrl(fontFamily, fontVariation);\n        document.head.appendChild(link_tag);\n    }\n}\n\n// Load Google stylesheet based on selected fontFamily\nfunction AdvLoadGoogleStylesheet( { fontFamily, fontVariation } ) {\n    const fontVariation_ = typeof fontVariation !== 'undefined' && fontVariation.length > 0 ? fontVariation : '';\n    return [\n        advgb_createLinkTag(fontFamily, fontVariation_),\n        null\n    ]\n}\n\n// Define font-family, font-weight, font-style and text-transform properties\nfunction AdvSetGoogleFontStyle( { fontFamily, fontVariation, textTransform, cssSelector } ){\n    let STYLE = '';\n\n    // font-family\n    if(typeof fontFamily !== 'undefined' && fontFamily.length > 0) {\n        STYLE += `font-family: \"${fontFamily}\" !important;`;\n    }\n\n    // font-weight and font-style\n    if(typeof fontVariation !== 'undefined' && fontVariation.length > 0) {\n        if(fontVariation.indexOf('italic') !== -1 && fontVariation.length > 6) {\n            STYLE += `font-weight:${fontVariation.split('italic', 1)[0]}; font-style:italic;`;\n        } else {\n            STYLE += `font-weight:${fontVariation};`;\n        }\n    }\n\n    // text-transform\n    if(typeof textTransform !== 'undefined' && textTransform.length > 0) {\n        STYLE += `text-transform:${textTransform};`;\n    }\n\n    if(typeof STYLE !== 'undefined' && STYLE.length > 0) {\n        return `${cssSelector} {\n            ${STYLE}\n        }`\n    } else {\n        return null;\n    }\n}\n\nexport { AdvLoadGoogleStylesheet };\nexport { AdvSetGoogleFontStyle };\n"],"sourceRoot":""}