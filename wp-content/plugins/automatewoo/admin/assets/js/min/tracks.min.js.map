{"version":3,"file":"tracks.min.js","mappings":"2BA0ECA,GAAGC,OAAS,CAAEC,YAzBd,SAAsBC,EAAWC,GAahC,GA/CD,YAAyBC,GAOxB,IAAIC,EAAYC,aAAaC,QAAS,SACtCF,EACCA,GACA,IAAIG,OAAQ,IAAMH,EAAUI,QAAS,MAAO,OAAU,KAAMC,KATtC,mBAalBL,GAIJM,QAAQC,IACP,oBACA,qBACGR,EAGN,CAeCS,CAAa,uBAFbX,EADsB,MACMA,KAEwBC,EAAiB,CACpEW,KAAMC,OAAOC,KACbC,eACIF,OAAOC,QACPD,OAAOG,YACPH,OAAOG,SAASb,aAIlBU,OAAOG,UAC8B,mBAAhCH,OAAOG,SAASjB,YAEvB,OAAO,EAIRc,OAAOG,SAASjB,YAAaC,EAAWC,EACzC","sources":["webpack://automatewoo/./admin/assets/js/tracks.js"],"sourcesContent":["// Register eslint ignored glabals - to be revisited.\n// https://github.com/woocommerce/automatewoo/issues/1212\n/* global AW, localStorage */\n/**\n * This module is a reduced clone of @woocommerce/tracks, for jQuery/legacy code-base.\n * It has no side-effect, only exports a suggar function on top of `window.wcTracks.recordEvent`.\n */\n( function () {\n\t/**\n\t * Console.log args in a way that mimics debug's behavior.\n\t * Log is shown only if localStorage contains the 'debug' item with a pattern that matches 'wc-admin:tracks'.\n\t * Paint that namespace in #FF33CC - the hardcoded color that should match the one generated by debug.\n\t *\n\t * @param {...any} args arguments to be logged.\n\t */\n\tfunction tracksDebug( ...args ) {\n\t\tconst debugNamespace = 'wc-admin:tracks';\n\t\t// Hard-coded color value of debug.selectColor( 'wc-admin:tracks' )\n\t\t// https://github.com/visionmedia/debug/blob/3f56313c1e4a0d59c1054fb9b10026b6903bfba7/src/common.js#L41\n\t\tconst debugColor = '#FF33CC';\n\n\t\t// Mimic debug's enable/disable behavior.\n\t\tlet isEnabled = localStorage.getItem( 'debug' );\n\t\tisEnabled =\n\t\t\tisEnabled &&\n\t\t\tnew RegExp( '^' + isEnabled.replace( /\\*/g, '.*?' ) + '$' ).test(\n\t\t\t\tdebugNamespace\n\t\t\t);\n\n\t\tif ( isEnabled ) {\n\t\t\t// We do not provide the diff time as we cannot access the same counter as debug,\n\t\t\t// having a separate one would be even more confusing.\n\t\t\t// eslint-disable-next-line no-console -- Logging in debug mode is the actual feature of this module.\n\t\t\tconsole.log(\n\t\t\t\t`%c${ debugNamespace }`,\n\t\t\t\t`color: ${ debugColor };`,\n\t\t\t\t...args\n\t\t\t);\n\t\t}\n\t}\n\t/**\n\t * Record an event to Tracks.\n\t * This is a clone of @woocommerce/tracks.recordEvent for legacy jQuery files.\n\t *\n\t * @see @woocommerce/tracks.recordEvent\n\t *\n\t * @param {string} eventName       The name of the event to record, don't include the wcadmin_ prefix\n\t * @param {Object} eventProperties event properties to include in the event\n\t */\n\tfunction recordEvent( eventName, eventProperties ) {\n\t\t// copied from ../src/settings.js\n\t\tconst TRACKS_PREFIX = 'aw_';\n\t\teventName = TRACKS_PREFIX + eventName;\n\n\t\ttracksDebug( `recordevent wcadmin_${ eventName } `, eventProperties, {\n\t\t\t_tqk: window._tkq,\n\t\t\tshouldRecord:\n\t\t\t\t!! window._tkq &&\n\t\t\t\t!! window.wcTracks &&\n\t\t\t\t!! window.wcTracks.isEnabled,\n\t\t} );\n\n\t\tif (\n\t\t\t! window.wcTracks ||\n\t\t\ttypeof window.wcTracks.recordEvent !== 'function'\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// 'wcadmin_' prefix is also added in the `recordEvent`.\n\t\twindow.wcTracks.recordEvent( eventName, eventProperties );\n\t}\n\n\t// Export only recordEvent to the global namespace.\n\tAW.tracks = { recordEvent };\n} )();\n"],"names":["AW","tracks","recordEvent","eventName","eventProperties","args","isEnabled","localStorage","getItem","RegExp","replace","test","console","log","tracksDebug","_tqk","window","_tkq","shouldRecord","wcTracks"],"sourceRoot":""}