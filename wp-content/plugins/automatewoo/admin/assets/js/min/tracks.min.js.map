{"version":3,"file":"tracks.min.js","names":["AW","tracks","recordEvent","eventName","eventProperties","args","debugNamespace","isEnabled","localStorage","getItem","RegExp","replace","test","console","log","tracksDebug","_tqk","window","_tkq","shouldRecord","wcTracks"],"sources":["tracks.js"],"sourcesContent":["/**\n * This module is a reduced clone of @woocommerce/tracks, for jQuery/legacy code-base.\n * It has no side-effect, only exports a suggar function on top of `window.wcTracks.recordEvent`.\n */\n( function() {\n\t/**\n\t * Console.log args in a way that mimics debug's behavior.\n\t * Log is shown only if localStorage contains the 'debug' item with a pattern that matches 'wc-admin:tracks'.\n\t * Paint that namespace in #FF33CC - the hardcoded color that should match the one generated by debug.\n\t * \n\t * @param {...*} arguments to be logged. \n\t */\n\tfunction tracksDebug( ...args ) {\n\t\tconst debugNamespace = 'wc-admin:tracks';\n\t\t// Hard-coded color value of debug.selectColor( 'wc-admin:tracks' )\n\t\t// https://github.com/visionmedia/debug/blob/3f56313c1e4a0d59c1054fb9b10026b6903bfba7/src/common.js#L41\n\t\tconst debugColor = \"#FF33CC\";\n\n\t\t// Mimic debug's enable/disable behavior.\n\t\tlet isEnabled = localStorage.getItem( 'debug' )\n\t\tisEnabled = isEnabled && ( new RegExp( '^' + isEnabled.replace( /\\*/g, '.*?' ) + '$' ) ).test( debugNamespace );\n\t\n\t\tif( isEnabled ) {\n\t\t\t// We do not provide the diff time as we cannot access the same counter as debug, \n\t\t\t// having a separate one would be even more confusing.\n\t\t\tconsole.log( `%c${ debugNamespace }`, `color: ${ debugColor };`, ...args );\n\t\t}\n\t}\n\t/**\n\t * Record an event to Tracks.\n\t * This is a clone of @woocommerce/tracks.recordEvent for legacy jQuery files.\n\t *\n\t * @see @woocommerce/tracks.recordEvent\n\t * \n\t * @param {string} eventName The name of the event to record, don't include the wcadmin_ prefix\n\t * @param {Object} eventProperties event properties to include in the event\n\t */\n\tfunction recordEvent( eventName, eventProperties ) {\n\t\t// copied from ../src/settings.js\n\t\tconst TRACKS_PREFIX = 'aw_';\n\t\teventName = TRACKS_PREFIX + eventName;\n\n\t\ttracksDebug( `recordevent wcadmin_${ eventName } `, eventProperties, {\n\t\t\t_tqk: window._tkq,\n\t\t\tshouldRecord: !!window._tkq && !!window.wcTracks && !!window.wcTracks.isEnabled\n\t\t} );\n\n\t\tif ( !window.wcTracks || typeof window.wcTracks.recordEvent !== 'function' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// 'wcadmin_' prefix is also added in the `recordEvent`.\n\t\twindow.wcTracks.recordEvent( eventName, eventProperties );\n    }\n\n    // Export only recordEvent to the global namespace.\n    AW.tracks = { recordEvent };\n} )();"],"mappings":"AAwDIA,GAAGC,OAAS,CAAEC,YAnBjB,SAAsBC,EAAWC,GAUhC,GAnCD,YAAyBC,GACxB,MAAMC,EAAiB,kBAMvB,IAAIC,EAAYC,aAAaC,QAAS,SACtCF,EAAYA,GAAa,IAAMG,OAAQ,IAAMH,EAAUI,QAAS,MAAO,OAAU,KAAQC,KAAMN,GAE3FC,GAGHM,QAAQC,IAAK,oBAAyB,qBAA8BT,EAEtE,CAeCU,CAAa,uBAFbZ,EADsB,MACMA,KAEwBC,EAAiB,CACpEY,KAAMC,OAAOC,KACbC,eAAgBF,OAAOC,QAAUD,OAAOG,YAAcH,OAAOG,SAASb,aAGjEU,OAAOG,UAAmD,mBAAhCH,OAAOG,SAASlB,YAC/C,OAAO,EAIRe,OAAOG,SAASlB,YAAaC,EAAWC,EACtC"}